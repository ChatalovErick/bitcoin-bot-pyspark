version: '3'

services:

  # ------------------------ #
  # data gathering and storage

  #matchtrades:
  #  build: ./data gathering and storage/Data gathering/MatchTrades

  #  ports:
  #    - "8002:8002"

  #limitorderbook:
  #  build: ./data gathering and storage/Data gathering/LOB

  #  ports:
  #    - "8001:8001"

  #datatransfer:
  #  build: ./data gathering and storage/Data transfer and local storage

  #  ports:
  #    - "8003:8003"

  #  volumes:
  #    - dailydata:/data gathering and storage/Data transfer and local storage/dailydata

  # ------------------------ #
  
  ed-pyspark-jupyter:
    image: jupyter/pyspark-notebook:spark-3.3.0
    user: root
    container_name: ed-pyspark-jupyter-lab
    ports:
      - 8888:8888
      - 4040:4040
    environment:
      JUPYTER_PORT: 8888
      SPARK_UI_PORT: 4040
      GRANT_SUDO: yes
    volumes:
      - streaming_data:/data:rw
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 3000M


  ed-zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: ed-zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 300M

  ed-kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ed-kafka
    depends_on:
      - ed-zookeeper
    ports:
      - 9092:9092
    volumes:
      - streaming_data:/data:rw
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: ed-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://ed-kafka:29092,PLAINTEXT_HOST://127.0.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "raw:1:1"

    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 2000M

volumes:
  streaming_data:
  dailydata:
    driver: local
    

